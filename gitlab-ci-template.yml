variables:
  WORKING_DIR: 'dockerbase'
  DOCKER_REPOSITORY: 'jetstudio'
  DOCKER_IMAGE: ''
  DOCKER_TAG: ''
  DOCKER_FILE: 'Dockerfile'
  DOCKER_BUILD_ARGS: ''
  PLATFORM: 'linux/amd64'
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

.build-base:
  image: docker:20.10.16
  services:
    - name: docker:20.10.16-dind
      command: [ "--mtu=1300", "--tls=false" ]
  script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
    - cd ${WORKING_DIR}
    - docker buildx create --use
    - >
      docker buildx build
      --push
      --platform ${PLATFORM}
      ${DOCKER_BUILD_ARGS}
      -t ${DOCKER_REPOSITORY}/${DOCKER_IMAGE}:${DOCKER_TAG} .
      -f ${DOCKER_FILE}

.php-base-stage:
  cache:
    - paths:
        - vendor
      key:
        files:
          - composer.lock
  image: jetstudio/php:cli-v8
  before_script:
    - composer install

.deploy-base:
  image: docker:20.10.22
  services:
    - name: docker:20.10.22-dind
      command: [ "--mtu=1300", "--tls=false" ]
  variables:
    PROJECT_IMAGE: $DOCKER_REPOSITORY/$DOCKER_IMAGE:${DOCKER_TAG_BASE}_${CI_COMMIT_TAG}
  before_script:
    - apk add --no-cache openssh-client git rsync
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
    - git clone https://oauth2:${GITLAB_PULL_TOKEN}@gitlab.com/jet-studio-io/infrastructure.git
    - cd infrastructure
    - sh script/init.sh
    - cp ../docker/service/* services/
    - unset DOCKER_HOST
    - >
      docker context create
      --docker host=ssh://jetxdev@$SERVER_IP
      --description="Remote context"
      remote-context
    - docker context use remote-context
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD